---
widgets:

  - name: "Text Widget"
    type: text
    markdown: "This is a dynamic dashboard created by Ansible! YAY!"

  - name: "Target RequestCount"
    type: metric
    view: timeSeries
    stacked: True
    period: 60
    stat: Sum
    metrics:
        {% for tg in tg_facts.results.0.target_groups %}
		{% if not ("dummy" in tg.target_group_arn) %}
        - [ "AWS/ApplicationELB", "RequestCount", "TargetGroup", "{{ tg.target_group_arn.split(':')[5] }}", "LoadBalancer", "{{ elb_facts.load_balancers.0.load_balancer_arn | regex_replace('.*loadbalancer/','') }}", { "stat": "Sum", "label": "{{ tg.target_group_name }}" } ]
		{% endif %}
        {% endfor %}

  - name: "TargetResponseTime Average"
    type: metric
    view: timeSeries
    stacked: False
    period: 60
    stat: Sum
    yaxis_left: [0, 1]
    yaxis_right: [0, 1]
    annotations: |
          { "horizontal": [ { "label": "1s", "value": 1 }, { "label": "500ms", "value": 0.5 }, { "label": "200ms", "value": 0.2 } ] }
    metrics:
        {% for tg in tg_facts.results.0.target_groups %}
        - [ "AWS/ApplicationELB", "TargetResponseTime", "TargetGroup", "{{ tg.target_group_arn.split(':')[5] }}", "LoadBalancer", "{{  elb_facts.load_balancers.0.load_balancer_arn | regex_replace('.*loadbalancer/','') }}", { "stat": "Average", "label": "{{ tg.target_group_name }} Average" } ]
        {% endfor %}

  - name: "CPU Utilization"
    type: metric
    view: timeSeries
    stacked: False
    period: 60
    yaxis_left: [0, 100]
    yaxis_right: [0, 100]
    metrics:
        {% for i in ec2_facts.instances %}
		{% if not ("NEW" in i.tags.Name) %}
        - [ "AWS/EC2", "CPUUtilization", "InstanceId", "{{ i.instance_id }}", { "period": 60, "label": "{{ i.tags.Name }}" } ]
		{% endif %}
        {% endfor %}

  - name: "Network In/Out"
    type: metric
    view: timeSeries
    stacked: False
    period: 60
    stat: Average
    metrics:
        {% for i in ec2_facts.instances %}
        - [ "AWS/EC2", "NetworkIn", "InstanceId", "{{ i.instance_id }}", { "label": "{{ i.tags.Name }} NetworkIn" } ]
        - [ ".", "NetworkOut", ".", ".", { "label": "{{ i.tags.Name }} NetworkOut" } ]
        {% endfor %}

  - name: "CF-BytesDownloaded"
    type: metric
    view: timeSeries
    stacked: False
    period: 60
    stat: Sum
    metrics:
        {% for cf in item_dashboard.describe_resources['cloudfront'] %}
        - [ "AWS/CloudFront", "BytesDownloaded", "Region", "Global", "DistributionId", "{{ cf.id }}", { "label": "{{ cf.label }}" } ]
        {% endfor %}
